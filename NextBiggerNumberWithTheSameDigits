using System;

public class Kata
{
    public static long NextBiggerNumber(long n)
    {
    string num = n.ToString();
    char[] digits = num.ToString().ToCharArray();

    // Find the pivot
    int pivotIndex = -1;
    for (int i = digits.Length - 2; i >= 0; i--)
    {
        if (digits[i] < digits[i + 1])
        {
            pivotIndex = i;
            break;
        }
    }

    // If no pivot is found, it's not possible to rearrange to get a bigger number
    if (pivotIndex == -1)
    {
        return -1;
    }

    // Find the smallest digit to the right of the pivot but larger than the pivot
    int smallestLarger = pivotIndex + 1;
    for (int i = pivotIndex + 2; i < digits.Length; i++)
    {
        if (digits[i] > digits[pivotIndex] && digits[i] < digits[smallestLarger])
        {
            smallestLarger = i;
        }
    }

    // Swap the pivot and the smallest larger digit
    char temp = digits[pivotIndex];
    digits[pivotIndex] = digits[smallestLarger];
    digits[smallestLarger] = temp;

    // Sort the digits to the right of the pivot in ascending order
    Array.Sort(digits, pivotIndex + 1, digits.Length - pivotIndex - 1);

    // Convert the modified array of digits back to an integer
    long result = long.Parse(new string(digits));

    return result;     
    }
}
